services:
  log-generator:
    build:
      context: .
      dockerfile: Dockerfile.log-generator
    container_name: log-generator
    environment:
      - LOG_LEVEL=INFO
      - LOGS_DIR=/var/logs/hestia
    volumes:
      - ./host_volumes/hestia-logs:/var/logs/hestia  
    restart: unless-stopped
    networks:
      - elastic-net

  fluentbit:
    build:
      context: .
      dockerfile: Dockerfile.fluentbit
    container_name: fluentbit
    volumes:
      - ./host_volumes/hestia-logs:/var/logs/hestia  
    restart: unless-stopped
    depends_on:
      es01:
        condition: service_healthy
    networks:
      - elastic-net
    healthcheck:
      test: ["CMD", "curl", "-fsSL", "http://es01:9200"]
      interval: 10s
      timeout: 5s
      retries: 5

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.0
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=hestia-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m -Des.security.manager.enabled=false"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./host_volumes/esdata01:/usr/share/elasticsearch/data  
    ports:
      - "9200:9200"
    networks:
      - elastic-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsSL http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.0
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=hestia-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m -Des.security.manager.enabled=false"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./host_volumes/esdata02:/usr/share/elasticsearch/data  
    networks:
      - elastic-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsSL http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.0
    container_name: kibana
    ports:
      - "5601:5601"
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    restart: unless-stopped
    depends_on:
      es01:
        condition: service_healthy
      es02:
        condition: service_healthy
    networks:
      - elastic-net
  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./host_volumes/grafana-data:/var/lib/grafana  
    environment:
      - GF_INSTALL_PLUGINS=grafana-elasticsearch-datasource@5.2.0
    restart: unless-stopped
    depends_on:
      es01:
        condition: service_healthy
      es02:
        condition: service_healthy
    networks:
      - elastic-net

networks:
  elastic-net:
    external: true