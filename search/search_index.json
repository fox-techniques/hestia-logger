{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"HESTIA Asynchronous Logger","text":"<p>HESTIA is a powerful, structured, asynchronous logging framework designed for modern applications. It ensures scalable, structured, and efficient log management across distributed systems, making debugging and observability seamless. </p> <p>HESTIA provides structured, asynchronous, and customizable logging for cloud-native, IoT, and real-time applications. Whether you're working with FastAPI, Flask, Kubernetes, or Elastic stack, Hestia ensures that your logs are well-organized, reliable, and easy to query.</p>"},{"location":"#key-features","title":"\ud83c\udf1f Key Features","text":"<ul> <li>\ud83d\ude80 Optimized for high-performance distributed systems </li> <li>\u23f3 Asynchronous Logging \u2013 Logs without blocking your application  </li> <li>\ud83c\udfed Multi-Backend Support \u2013 Write logs to Elasticsearch, files, or console </li> <li>\ud83c\udfab JSON-Formatted Logs \u2013 Ensures structured and queryable logs  </li> <li>\ud83d\udcdc Log Rotation &amp; Retention \u2013 Prevents logs from growing indefinitely  </li> <li>\ud83e\uddf5 Thread-Safe Logging \u2013 Suitable for multi-threaded applications  </li> <li>\u2699\ufe0f Configurable Handlers &amp; Formatters \u2013 Easily extend or modify log outputs  </li> <li>\ud83c\udfd7\ufe0f Modular &amp; Extensible \u2013 Easily customizable for different workflows.</li> <li>\ud83d\udce6 Deploy Anywhere \u2013 Works in Docker, Kubernetes, and serverless environments.</li> </ul>"},{"location":"#why-choose-hestia","title":"\ud83d\udccc Why Choose HESTIA?","text":"<p>\ud83d\udd39 Designed for Modern Applications \u2013 Works with cloud, IoT, and microservices \ud83d\udd39 Seamless Integration  \u2013 Plug &amp; play with FastAPI, Flask, Kubernetes \ud83d\udd39 Scalability &amp; Performance  \u2013 Handles high-volume logs with minimal overhead \ud83d\udd39 Security-First Approach  \u2013 Mask sensitive data automatically \ud83d\udd39 Centralized Logging Support  \u2013 Compatible with Elasticsearch, Kibana, Grafana </p>"},{"location":"#use-hestia-if-you-need","title":"\ud83d\udca1 Use HESTIA if you need:","text":"<p>\u2705 A logging framework that works out-of-the-box \u2705 Advanced log filtering &amp; structured JSON logging \u2705 Compatibility with cloud environments (AWS, Azure, GCP) \u2705 A scalable logging system for real-time and IoT applications \u2705 Multi-backend support (Elasticsearch, Console, File) </p>"},{"location":"#quick-links","title":"\ud83d\udd17 Quick Links","text":"<ul> <li>HESTIA on PyPI</li> <li>GitHub Repository</li> <li>License</li> </ul> <p>Explore the documentation to learn how to customize and make the most of HESTIA Asynchronous Logger for your project!</p>"},{"location":"CODE_OF_CONDUCT/","title":"\ud83c\udfdb\ufe0f Code of Conduct","text":""},{"location":"CODE_OF_CONDUCT/#our-pledge","title":"\ud83d\udcdc Our Pledge","text":"<p>We, as community members, contributors, and leaders, pledge to create an inclusive, welcoming, and harassment-free experience for everyone, regardless of:</p> <ul> <li>Age, appearance, body size, or visible/invisible disabilities</li> <li>Ethnicity, race, nationality, or socio-economic status</li> <li>Gender identity, sexual orientation, or personal beliefs</li> <li>Level of experience, education, or background</li> </ul> <p>We commit to fostering an open and respectful environment where everyone feels safe, valued, and empowered to contribute.</p>"},{"location":"CODE_OF_CONDUCT/#our-standards","title":"\ud83d\udc8e Our Standards","text":"<p>Examples of positive behavior:</p> <p>\u2705 Showing empathy, kindness, and respect toward others</p> <p>\u2705 Welcoming new contributors and guiding them patiently</p> <p>\u2705 Accepting constructive feedback with grace and professionalism</p> <p>\u2705 Taking responsibility for mistakes and learning from them</p> <p>\u2705 Prioritizing what\u2019s best for the community as a whole, not just individuals</p> <p>Examples of unacceptable behavior:</p> <p>\ud83d\udeab Using sexualized language, imagery, or unwanted attention</p> <p>\ud83d\udeab Trolling, personal attacks, or inflammatory comments</p> <p>\ud83d\udeab Harassment (public or private), intimidation, or bullying</p> <p>\ud83d\udeab Publishing private information (emails, addresses, etc.) without consent</p> <p>\ud83d\udeab Sustained disruption of discussions, projects, or community events</p>"},{"location":"CODE_OF_CONDUCT/#enforcement-responsibilities","title":"\u2696\ufe0f Enforcement Responsibilities","text":"<p>Community leaders\u2014including maintainers, moderators, and core contributors\u2014are responsible for enforcing this Code of Conduct by:</p> <ul> <li>Reviewing all reported incidents in a fair and confidential manner</li> <li>Removing, editing, or rejecting comments, commits, issues, and contributions that violate these standards</li> <li>Communicating moderation decisions clearly and professionally</li> </ul> <p>Failure to comply with these guidelines may result in warnings, temporary bans, or permanent removal from the community.</p>"},{"location":"CODE_OF_CONDUCT/#reporting-violations","title":"\ud83d\udea8 Reporting Violations","text":"<p>If you witness or experience unacceptable behavior, please report it immediately. We take violations seriously and will respond within 3 business days.</p> <p>\ud83d\udce8 Report via email: conduct@fox-techniques.com</p> <p>\ud83d\udd12 All reports are kept confidential.</p> <p>When reporting, please include:</p> <ul> <li>A detailed description of the incident (including dates &amp; locations)</li> <li>Any supporting evidence (screenshots, links, messages)</li> <li>Your preferred outcome (if applicable)</li> </ul> <p>If you're unsure whether something is a violation, ask us! We're here to help.</p>"},{"location":"CODE_OF_CONDUCT/#enforcement-guidelines","title":"\ud83d\udccc Enforcement Guidelines","text":"<p>Community leaders will follow these guidelines to determine appropriate consequences for violations:</p> <p>\u278a \u26a0\ufe0f Warning</p> <ul> <li>Impact: Minor infraction (e.g., inappropriate language or unintentional offense)</li> <li>Action: Private warning with an explanation of the violation. A public apology may be requested.</li> </ul> <p>\u278b \ud83d\udeab Temporary Ban</p> <ul> <li>Impact: Repeated infractions, harassment, or intentional disruption</li> <li>Action: Temporary ban from community spaces, discussions, and direct interactions.</li> </ul> <p>\u278c \u274c Permanent Ban</p> <ul> <li>Impact: Serious violations, including threats, doxxing, or extreme harassment</li> <li>Action: Permanent removal from all community platforms.</li> </ul> <p>\ud83d\ude80 Appeals: If you believe an enforcement action was taken unfairly, you may appeal by emailing conduct@fox-techniques.com.</p>"},{"location":"CODE_OF_CONDUCT/#scope","title":"\ud83c\udf0e Scope","text":"<p>This Code of Conduct applies everywhere, including:</p> <ul> <li>GitHub repositories (issues, discussions, PRs)</li> <li>Community chat channels (Discord, Slack, forums)</li> <li>Conferences, meetups, and official events</li> <li>Social media accounts affiliated with this project</li> </ul> <p>Maintainers reserve the right to act on violations even if they occur outside these spaces, if they impact the safety and inclusivity of the community.</p>"},{"location":"CODE_OF_CONDUCT/#attribution","title":"\ud83d\udcdc Attribution","text":"<p>This Code of Conduct is adapted from:</p> <ul> <li>Contributor Covenant v2.0</li> <li>Mozilla\u2019s Code of Conduct Enforcement Ladder</li> </ul> <p>\u2049\ufe0f For FAQs and translations, visit: Contributor Covenant FAQ</p>"},{"location":"CONTRIBUTING/","title":"\u2728 Contributing Guidelines","text":"<p>We welcome all contributions, including pull requests, bug reports, and discussions. Thank you for helping improve HESTIA Asynchronous Logger!</p>"},{"location":"CONTRIBUTING/#code-of-conduct","title":"\ud83d\udcdc Code of Conduct","text":"<p>Please review our Code of Conduct. All contributors are expected to follow it. Any inappropriate behavior or violations will not be tolerated.  </p>"},{"location":"CONTRIBUTING/#how-to-get-help","title":"\u2753 How to Get Help","text":"<p>See our Support Guide. Do not use GitHub issues for general questions\u2014ask on Stack Overflow instead.  </p>"},{"location":"CONTRIBUTING/#bug-reports-issues","title":"\ud83d\udc1e Bug Reports &amp; Issues","text":""},{"location":"CONTRIBUTING/#do","title":"\ud83c\udfc1 DO","text":"<p>\u2705 Check the documentation &amp; Support Guide before opening an issue.  </p> <p>\u2705 Search existing issues to avoid duplicates.  </p> <p>\u2705 Provide clear details\u2014steps to reproduce, error logs, expected vs. actual behavior.  </p> <p>\u2705 Use Markdown formatting (wrap code in triple backticks <code>```</code>).  </p>"},{"location":"CONTRIBUTING/#dont","title":"\u26d4 DON'T","text":"<p>\u274c Open duplicate issues.</p> <p>\u274c Comment \"+1\"\u2014use GitHub reactions instead.  </p>"},{"location":"CONTRIBUTING/#feature-requests","title":"\ud83d\udca1 Feature Requests","text":"<ul> <li>Clearly describe the problem your feature solves.  </li> <li>Explain why it's useful for others.  </li> <li>If possible, outline a potential implementation.  </li> <li>Avoid feature creep\u2014we prioritize core functionality.  </li> </ul>"},{"location":"CONTRIBUTING/#submitting-pull-requests","title":"\ud83d\ude80 Submitting Pull Requests","text":"<p>Before submitting a PR:  </p> <p>\u2714 Open an issue first (for large changes).  </p> <p>\u2714 Keep PRs small\u2014one bug fix or feature per PR.  </p> <p>\u2714 Follow existing coding styles.  </p> <p>\u2714 Include tests and update documentation if necessary.  </p> <p>\u2714 Ensure CI checks pass before requesting review.  </p>"},{"location":"CONTRIBUTING/#pr-workflow","title":"\ud83d\udd04 PR Workflow","text":"Step Action Required \ud83d\udcdd Open Issue Discuss the problem/feature first. \ud83c\udfd7\ufe0f Fork &amp; Code Follow project structure, add tests. \ud83d\udcd1 Create PR Provide a clear description. \ud83d\udd0d Code Review Address comments &amp; improve PR. \u2705 Merge &amp; Release After approval, maintainers merge it."},{"location":"CONTRIBUTING/#writing-commit-messages","title":"\ud83d\udcdd Writing Commit Messages","text":"<p>Follow these commit message rules: </p> <p>\u2714 Use the imperative mood \u2192 (\"Fix crash\", not \"Fixed crash\"). \u2714 Keep subject under 50 chars, and wrap body at 72 chars. \u2714 Explain why the change is needed, not just what it does. \u2714 Prefix relevant component \u2192 (e.g., <code>[docs]</code>, <code>[handler]</code>, <code>[decorator]</code>).  </p> <p>Example: <pre><code>[auth] Fix JWT token expiration issue\n\nUpdated the expiration logic to ensure tokens expire after 15 minutes.\nFixed bug where revoked tokens could still be used.\nResolves: #123\n</code></pre></p>"},{"location":"CONTRIBUTING/#certificate-of-origin","title":"\ud83c\udfc5 Certificate of Origin","text":"<p>Developer's Certificate of Origin 1.1</p> <p>By making a contribution to this project, I certify that:</p> <ol> <li>The contribution was created in whole or in part by me and I have the right to submit it under the open-source license indicated in the file; or</li> <li>The contribution is based upon previous work that, to the best of my knowledge, is covered under an appropriate open-source license, and I have the right under that license to submit that work with modifications, whether created in whole or in part by me, under the same open-source license (unless I am permitted to submit under a different license), as indicated in the file; or</li> <li>The contribution was provided directly to me by some other person who certified (1), (2), or (3), and I have not modified it.</li> <li>I understand and agree that this project and the contribution are public and that a record of the contribution (including all personal information I submit with it, including my sign-off) is maintained indefinitely and may be redistributed consistently with this project or the open-source license(s) involved.</li> </ol>"},{"location":"CONTRIBUTING/#summary","title":"\ud83d\udccc Summary","text":"<p>\ud83c\udfaf Report bugs &amp; feature requests properly.</p> <p>\ud83d\ude80 Follow PR &amp; coding guidelines.</p> <p>\u270d Write clear commit messages.</p> <p>\ud83d\udcdc Respect the Code of Conduct.</p> <p>\ud83d\ude4c Thank you for contributing to HESTIA Asynchronous Logger!</p>"},{"location":"LICENSE/","title":"\ud83d\udcdc License","text":"<p>HESTIA Asynchronous Logger is licensed under the Apache License Version 2.0, January 2004.</p>"},{"location":"LICENSE/#terms-and-conditions","title":"TERMS AND CONDITIONS","text":"<p>FOR USE, REPRODUCTION, AND DISTRIBUTION</p> <ol> <li>Definitions.</li> </ol> <p>\"License\" shall mean the terms and conditions for use, reproduction,    and distribution as defined by Sections 1 through 9 of this document.</p> <p>\"Licensor\" shall mean the copyright owner or entity authorized by    the copyright owner that is granting the License.</p> <p>\"Legal Entity\" shall mean the union of the acting entity and all    other entities that control, are controlled by, or are under common    control with that entity. For the purposes of this definition,    \"control\" means (i) the power, direct or indirect, to cause the    direction or management of such entity, whether by contract or    otherwise, or (ii) ownership of fifty percent (50%) or more of the    outstanding shares, or (iii) beneficial ownership of such entity.</p> <p>\"You\" (or \"Your\") shall mean an individual or Legal Entity    exercising permissions granted by this License.</p> <p>\"Source\" form shall mean the preferred form for making modifications,    including but not limited to software source code, documentation    source, and configuration files.</p> <p>\"Object\" form shall mean any form resulting from mechanical    transformation or translation of a Source form, including but    not limited to compiled object code, generated documentation,    and conversions to other media types.</p> <p>\"Work\" shall mean the work of authorship, whether in Source or    Object form, made available under the License, as indicated by a    copyright notice that is included in or attached to the work    (an example is provided in the Appendix below).</p> <p>\"Derivative Works\" shall mean any work, whether in Source or Object    form, that is based on (or derived from) the Work and for which the    editorial revisions, annotations, elaborations, or other modifications    represent, as a whole, an original work of authorship. For the purposes    of this License, Derivative Works shall not include works that remain    separable from, or merely link (or bind by name) to the interfaces of,    the Work and Derivative Works thereof.</p> <p>\"Contribution\" shall mean any work of authorship, including    the original version of the Work and any modifications or additions    to that Work or Derivative Works thereof, that is intentionally    submitted to Licensor for inclusion in the Work by the copyright owner    or by an individual or Legal Entity authorized to submit on behalf of    the copyright owner. For the purposes of this definition, \"submitted\"    means any form of electronic, verbal, or written communication sent    to the Licensor or its representatives, including but not limited to    communication on electronic mailing lists, source code control systems,    and issue tracking systems that are managed by, or on behalf of, the    Licensor for the purpose of discussing and improving the Work, but    excluding communication that is conspicuously marked or otherwise    designated in writing by the copyright owner as \"Not a Contribution.\"</p> <p>\"Contributor\" shall mean Licensor and any individual or Legal Entity    on behalf of whom a Contribution has been received by Licensor and    subsequently incorporated within the Work.</p> <ol> <li> <p>Grant of Copyright License. Subject to the terms and conditions of    this License, each Contributor hereby grants to You a perpetual,    worldwide, non-exclusive, no-charge, royalty-free, irrevocable    copyright license to reproduce, prepare Derivative Works of,    publicly display, publicly perform, sublicense, and distribute the    Work and such Derivative Works in Source or Object form.</p> </li> <li> <p>Grant of Patent License. Subject to the terms and conditions of    this License, each Contributor hereby grants to You a perpetual,    worldwide, non-exclusive, no-charge, royalty-free, irrevocable    (except as stated in this section) patent license to make, have made,    use, offer to sell, sell, import, and otherwise transfer the Work,    where such license applies only to those patent claims licensable    by such Contributor that are necessarily infringed by their    Contribution(s) alone or by combination of their Contribution(s)    with the Work to which such Contribution(s) was submitted. If You    institute patent litigation against any entity (including a    cross-claim or counterclaim in a lawsuit) alleging that the Work    or a Contribution incorporated within the Work constitutes direct    or contributory patent infringement, then any patent licenses    granted to You under this License for that Work shall terminate    as of the date such litigation is filed.</p> </li> <li> <p>Redistribution. You may reproduce and distribute copies of the    Work or Derivative Works thereof in any medium, with or without    modifications, and in Source or Object form, provided that You    meet the following conditions:</p> </li> </ol> <p>(a) You must give any other recipients of the Work or          Derivative Works a copy of this License; and</p> <p>(b) You must cause any modified files to carry prominent notices          stating that You changed the files; and</p> <p>(c) You must retain, in the Source form of any Derivative Works          that You distribute, all copyright, patent, trademark, and          attribution notices from the Source form of the Work,          excluding those notices that do not pertain to any part of          the Derivative Works; and</p> <p>(d) If the Work includes a \"NOTICE\" text file as part of its          distribution, then any Derivative Works that You distribute must          include a readable copy of the attribution notices contained          within such NOTICE file, excluding those notices that do not          pertain to any part of the Derivative Works, in at least one          of the following places: within a NOTICE text file distributed          as part of the Derivative Works; within the Source form or          documentation, if provided along with the Derivative Works; or,          within a display generated by the Derivative Works, if and          wherever such third-party notices normally appear. The contents          of the NOTICE file are for informational purposes only and          do not modify the License. You may add Your own attribution          notices within Derivative Works that You distribute, alongside          or as an addendum to the NOTICE text from the Work, provided          that such additional attribution notices cannot be construed          as modifying the License.</p> <p>You may add Your own copyright statement to Your modifications and    may provide additional or different license terms and conditions    for use, reproduction, or distribution of Your modifications, or    for any such Derivative Works as a whole, provided Your use,    reproduction, and distribution of the Work otherwise complies with    the conditions stated in this License.</p> <ol> <li> <p>Submission of Contributions. Unless You explicitly state otherwise,    any Contribution intentionally submitted for inclusion in the Work    by You to the Licensor shall be under the terms and conditions of    this License, without any additional terms or conditions.    Notwithstanding the above, nothing herein shall supersede or modify    the terms of any separate license agreement you may have executed    with Licensor regarding such Contributions.</p> </li> <li> <p>Trademarks. This License does not grant permission to use the trade    names, trademarks, service marks, or product names of the Licensor,    except as required for reasonable and customary use in describing the    origin of the Work and reproducing the content of the NOTICE file.</p> </li> <li> <p>Disclaimer of Warranty. Unless required by applicable law or    agreed to in writing, Licensor provides the Work (and each    Contributor provides its Contributions) on an \"AS IS\" BASIS,    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or    implied, including, without limitation, any warranties or conditions    of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A    PARTICULAR PURPOSE. You are solely responsible for determining the    appropriateness of using or redistributing the Work and assume any    risks associated with Your exercise of permissions under this License.</p> </li> <li> <p>Limitation of Liability. In no event and under no legal theory,    whether in tort (including negligence), contract, or otherwise,    unless required by applicable law (such as deliberate and grossly    negligent acts) or agreed to in writing, shall any Contributor be    liable to You for damages, including any direct, indirect, special,    incidental, or consequential damages of any character arising as a    result of this License or out of the use or inability to use the    Work (including but not limited to damages for loss of goodwill,    work stoppage, computer failure or malfunction, or any and all    other commercial damages or losses), even if such Contributor    has been advised of the possibility of such damages.</p> </li> <li> <p>Accepting Warranty or Additional Liability. While redistributing    the Work or Derivative Works thereof, You may choose to offer,    and charge a fee for, acceptance of support, warranty, indemnity,    or other liability obligations and/or rights consistent with this    License. However, in accepting such obligations, You may act only    on Your own behalf and on Your sole responsibility, not on behalf    of any other Contributor, and only if You agree to indemnify,    defend, and hold each Contributor harmless for any liability    incurred by, or claims asserted against, such Contributor by reason    of your accepting any such warranty or additional liability.</p> </li> </ol> <p>END OF TERMS AND CONDITIONS</p>"},{"location":"LICENSE/#appendix-how-to-apply-the-apache-license-to-your-work","title":"APPENDIX: How to apply the Apache License to your work.","text":"<p>\u278a HESTIA via package managers:, with:</p> <p><code>poetry add hestia-logger</code> or <code>pip install hestia-logger</code></p> <ul> <li>No extra steps needed! Just install and enjoy. \ud83d\ude80</li> </ul> <p>\u278b Modification and/or redistribution of HESTIA</p> <ol> <li>Keep the Apache License file  in your project.</li> <li> <p>Add a small note in the modified files:</p> <pre><code># Based on HESTIA Logger (https://github.com/FOX-Techniques/hestia-logger)\n# Modified by [Your Name] on [Date]\n# Licensed under Apache License 2.0: http://www.apache.org/licenses/LICENSE-2.0\n</code></pre> <p>That\u2019s it! You\u2019re good to go...</p> </li> </ol>"},{"location":"SECURITY/","title":"\ud83d\udd12 Security Policies","text":""},{"location":"SECURITY/#supported-versions","title":"\u2705 Supported Versions","text":"<p>We provide updates and security patches for the following versions:</p> Version Supported 1.x.x  Actively Maintained"},{"location":"SECURITY/#reporting-a-security-vulnerability","title":"\ud83d\udee1\ufe0f Reporting a Security Vulnerability","text":"<p>If you discover a security issue, please report it privately to us as soon as possible.</p> <p>\ud83d\udea8 DO NOT open a public GitHub issue for security vulnerabilities. Instead, follow these steps:</p> <p>\u278a \ud83d\udce9 Send an email to security@fox-techniques.com Include as many details as possible (e.g., steps to reproduce, potential impact).</p> <p>\u278b \u23f3 We aim to respond within 3 business days. We\u2019ll acknowledge receipt, assess the issue, and provide updates.</p> <p>\u278c \ud83d\udee0\ufe0f We will work on a fix ASAP and coordinate disclosure. We follow responsible disclosure practices to ensure affected parties are notified properly.</p> <p>Thank you for helping keep HESTIA Asynchronous Logger secure! \ud83d\ude4c</p>"},{"location":"SUPPORT/","title":"\ud83d\udce3 Support and Help","text":"<p>Need help getting started or using the project? Here's how.</p>"},{"location":"SUPPORT/#how-to-get-help","title":"\ud83d\ude91 How to Get Help","text":"<p>For general usage questions that are not specific to the project itself, please search for answers on Stack Overflow. This is the best way to get help quickly and allows others to benefit from shared knowledge.</p> <p>We recommend seeking support in the following ways:</p> <p>\u278a \ud83d\udcd6 Read the Documentation &amp; Guides. Before asking for help, check the documentation and guides for solutions. Hands-on experience is the best way to learn! We\u2019re rooting for you! \ud83d\udc4f</p> <p>\u278b \ud83d\udd0d Search &amp; Ask on Stack Overflow. If you're troubleshooting an issue or trying to use the project in a specific way, search existing questions or ask new ones on Stack Overflow.</p> <p>\u278c \ud83d\udcac Join Our Discord or Slack Community. We don\u2019t provide direct \u201ccustomer support,\u201d but we are happy to engage in discussions, answer questions, and chat about best practices. We\u2019ll try our best to respond, but please be patient! \ud83d\udc0c</p> <p>\u278d \u270d\ufe0f Open a GitHub Issue (Last Resort!)</p> <p>If you believe you\u2019ve found a bug or need help that only the maintainers can provide, open a GitHub issue. When doing so:</p> <ol> <li>\u2705 Clearly explain your issue and what you're trying to accomplish.</li> <li>\u2705 List what you\u2019ve already tried.</li> <li>\u2705 Provide minimal, reproducible code samples (but do not attach your entire project).</li> </ol>"},{"location":"SUPPORT/#what-not-to-do","title":"\u274c What NOT to Do","text":"<p>When seeking support, please avoid the following:</p> <ol> <li>\ud83d\udeab Do not message contributors on Twitter or other social media.</li> <li>\ud83d\udeab Do not spam issues with +1 comments or duplicate issues.</li> </ol> <p>Public questions get public answers, which benefit everyone in the community. Let\u2019s keep discussions open and helpful! \u270c\ufe0f</p>"},{"location":"architecture/","title":"\ud83c\udff0 System Architecture","text":"<p>This document provides an overview of the system architecture following the C4 Model, progressively detailing context (level 1) and containers (level 2) structures.</p>"},{"location":"architecture/#system-context","title":"\ud83d\udce1 System Context","text":"<p>The System Context Diagram provides a high-level view of HESTIA, showing:</p> <ul> <li>Who interacts with it (Users, External Systems).</li> <li>How it fits into the ecosystem.</li> </ul> <pre><code>graph TB;\n\n    developer[\"\ud83d\udc68\u200d\ud83d\udcbb Developer\"] --&gt; hestia[\"\ud83d\udcdc HESTIA Asynchronous Logger\"];\n    app[\"\ud83d\udda5\ufe0f Application (FastAPI, Flask, CLI)\"] --&gt; hestia;\n    externalAPIs[\"\ud83d\udd17 External Logging APIs\"] --&gt; hestia;\n\n    hestia --&gt; logStorage[\"\ud83d\udcdd Log Storage (JSON and TXT)\"];\n    hestia --&gt; console[\"\ud83d\udda5\ufe0f Console (Human-Readable Logs)\"];\n\n    logStorage --Parse/Forward Logs--- logForwarder[\"\ud83d\udee2\ufe0f Fluent Bit\"] \n    logForwarder --&gt; elasticsearch[\"\ud83d\udd0d Elasticsearch\"] \n    elasticsearch --Full Text-Search--&gt; kibana[\"\ud83d\udcca Kibana\"];\n    elasticsearch --Monitoring Dashboards--&gt; grafana[\"\ud83c\udfa8 Grafana\"];\n</code></pre>"},{"location":"architecture/#container-diagram","title":"\ud83d\udce6 Container Diagram","text":"<p>This diagram details the deployed containers in the HESTIA Logger demo, showing log flow from a microservice to an observability stack, orchestrated by a setup script.</p> <pre><code>\ngraph TB\n    dev[\"\ud83d\udc68\u200d\ud83d\udcbb Developer\"] -.- logGen[\"\ud83d\udda5\ufe0f Log Generator&lt;br&gt;services/log-generator\"]\n\n    subgraph Hestia_Logger_System [\"HESTIA Logger System\"]\n        logGen --&gt;|Writes Logs| vol[(/var/logs/hestia&lt;br&gt;Shared Storage)]\n        vol --&gt;|Reads Logs| fluent[\"\ud83d\udee2\ufe0f Fluent Bit&lt;br&gt;services/fluentbit\"]\n\n        subgraph Docker_Compose [\"Docker Compose\"]\n            logGen\n            fluent\n            subgraph Elasticsearch_Cluster [\"Elasticsearch Cluster\"]\n                es01[\"\ud83d\udd0d Elasticsearch Node 1&lt;br&gt;es01\"]\n                es02[\"\ud83d\udd0d Elasticsearch Node 2&lt;br&gt;es02\"]\n            end\n            kibana[\"\ud83d\udcca Kibana&lt;br&gt;PORT: 5601\"]\n            grafana[\"\ud83c\udfa8 Grafana&lt;br&gt;PORT: 3000\"]\n        end\n\n        fluent --&gt;|Forwards| es01\n        fluent --&gt;|Forwards| es02\n        es01 --&gt;|Stores| indices[(hestia-logs-*&lt;br&gt;INDICES)]\n        es02 --&gt;|Stores| indices\n        indices --&gt;|Queries| kibana\n        indices --&gt;|Queries| grafana\n    end\n\n    setup[\"\u2699\ufe0f setup_microservices.sh\"] --&gt;|Orchestrates| logGen\n    setup --&gt;|Orchestrates| fluent\n    setup --&gt;|Orchestrates| es01\n    setup --&gt;|Orchestrates| es02\n    setup --&gt;|Orchestrates| kibana\n    setup --&gt;|Orchestrates| grafana</code></pre>"},{"location":"architecture/#references","title":"\ud83d\udcda References","text":"<ul> <li>C4 Model Documentation</li> <li>Mermaid.js Diagrams</li> <li>MkDocs Material</li> </ul>"},{"location":"configuration/","title":"\ud83d\udd27 Configuration","text":"<p>HESTIA Asynchronous Logger relies on environment variables and Docker secrets to securely store configuration values. Below is a guide on how to configure the service.</p>"},{"location":"configuration/#environment-variables","title":"\ud83c\udf0d Environment Variables","text":"<p>HESTIA loads configuration from a <code>.env</code> file or system environment variables. The following default <code>.env.example</code> file is provided for local development. </p> <p>Create a copy of <code>.env.example</code> file in the project root:</p> <pre><code>cp .env.example .env\n</code></pre> <p>To use this configuration, and modify the values as needed.</p> <p>Note</p> <p>HESTIA accepts <code>.env</code> as little as:</p> .env<pre><code># ========================\n# \ud83c\udff7\ufe0f Application Version\n# ========================\nAPP_VERSION=1.0.0\n\n# ========================\n# \ud83c\udf0d Runtime Environment\n# Options: local, container, production\n# ========================\nENVIRONMENT=local\n\n# ========================\n# \ud83d\udd0a Logging Level\n# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL\n# ========================\nLOG_LEVEL=INFO\n</code></pre> <p>Now that environment variables are set, continue with installation. \ud83c\udfaf</p>"},{"location":"demo/","title":"\ud83c\udfa5 Demo","text":"<p>This guide walks you through setting up HESTIA as a microservice that:</p> <ul> <li>Logs structured events in JSON format.</li> <li>Process logs with Fluent Bit. </li> <li>Streams logs to Elasticsearch for centralized storage.</li> <li>Visualizes logs in Kibana &amp; Grafana.</li> <li>Runs inside Docker &amp; Kubernetes.</li> </ul>"},{"location":"demo/#a-glance-on-hestia","title":"\ud83c\udfac A Glance on HESTIA","text":"KibanaGrafana"},{"location":"demo/#prerequisites","title":"\u26a1\ufe0f Prerequisites","text":"<p>Before starting, ensure you have:</p> <ul> <li>Docker and Docker Compose installed (Installation Guide).</li> <li>A terminal to run commands.</li> <li>Basic familiarity with web browsers to access Kibana and Grafana.</li> </ul>"},{"location":"demo/#running-the-microservices","title":"\ud83d\ude80 Running the Microservices","text":"<p>All microservices are managed in the <code>services/</code> directory. Follow these steps to get them up and running:</p>"},{"location":"demo/#1-run-the-setup-script","title":"1. Run the Setup Script","text":"<p>Navigate to the Services Directory</p> <pre><code>cd services\n</code></pre> <p>Make sure that permissions are set correctly for The <code>setup_microservices.sh</code> script. </p> <pre><code>chmod +x setup_microservices.sh\n</code></pre> <p>THis script configures the network, creates directories, and starts the services.</p> <pre><code>./setup_microservices.sh\n</code></pre> <p>Tip</p> <p>If you encounter subnet conflicts, the script will suggest alternative subnets (e.g., 172.19.0.0/16). Edit setup_microservices.sh to change <code>SUBNET</code> if needed.</p>"},{"location":"demo/#2-verify-services","title":"2. Verify Services","text":"<p>Check that all services are running:</p> <pre><code>docker ps -a\n</code></pre> <p>You should see:</p> <ul> <li>log-generator</li> <li>fluentbit</li> <li>es01 and es02 (Elasticsearch nodes)</li> <li>kibana</li> <li>grafana</li> </ul>"},{"location":"demo/#exploring-logs-in-kibana","title":"\ud83d\udcca Exploring Logs in Kibana","text":""},{"location":"demo/#1-access-kibana","title":"1. Access Kibana","text":"<p>Open your browser and go to:</p> <pre><code>http://localhost:5601\n</code></pre>"},{"location":"demo/#2-verify-the-index-pattern","title":"2. Verify the Index Pattern","text":"<p>Navigate to Menu (\u2630) &gt; Management &gt; Stack Management &gt; Index Management.</p> <p>Indices are listed in the following pattern:</p> <pre><code>hestia-logs-yyyy.mm.dd\n</code></pre>"},{"location":"demo/#3-view-logs","title":"3. View Logs","text":"<p>Navigate to Menu (\u2630) &gt; Management &gt; Analytics &gt; Discover, and create a Data View with the following attributes:</p> attribute value Name <code>hestia-logs</code> Index pattern <code>hestia-logs-*</code> Timestamp field <code>@timestamp</code>"},{"location":"demo/#logging-dashboard-in-grafana","title":"\ud83c\udfa8 Logging Dashboard in Grafana","text":""},{"location":"demo/#1-access-grafana","title":"1. Access Grafana","text":"<p>Open your browser and go to:</p> <pre><code>http://localhost:3000\n</code></pre>"},{"location":"demo/#2-login-to-grafana","title":"2. Login to Grafana","text":"<p>The default login information is set as admin/admin (username/password). On the first login, Grafan redirects you to setting a new password. </p>"},{"location":"demo/#3-view-hestia-dashboard","title":"3. View HESTIA Dashboard","text":"<p>Navigate to Menu (\u2630) &gt; Dashboards &gt; Hestia Logger.</p> <p>Note</p> <p>Kibana and Grafana may take a few minutes to start. Please be patient! \u23f3</p> <p>Thank you for exploring our demo!\ud83d\ude4c We hope this example has given you a clear understanding of how to utilize HESTIA and integrate its features into your projects. Whether you're just getting started or diving deeper, our goal is to make your experience as seamless and productive as possible. \u270c\ufe0f</p>"},{"location":"installation/","title":"\ud83d\udce5 Installation","text":"<p>HESTIA uses the following dependencies which will be installed automatically:</p> <ol> <li><code>python-dotenv</code> \u2013 Loads environment variables from <code>.env</code>.  </li> <li><code>coloredlogs</code> \u2013 Provides colored log output for better readability.  </li> <li><code>elasticsearch</code> \u2013 Required for sending logs to Elasticsearch.  </li> <li><code>python-json-logger</code> \u2013 Formats logs as structured JSON (useful for Logstash &amp; Kibana).  </li> <li><code>fastapi</code> \u2013 Likely used for exposing logs via an API endpoint.  </li> <li><code>requests</code> \u2013 Standard HTTP library for making API calls.  </li> <li><code>structlog</code> \u2013 Enhances logging with structured data.  </li> <li><code>httpx</code> \u2013 Async HTTP client (may be used for async logging or external APIs).  </li> </ol>"},{"location":"installation/#poetry","title":"\ud83c\udfad Poetry","text":"<p>We highly recommends using Poetry for its outstanding dependency management.</p> <p>To start a new project:</p> <pre><code>poetry new my_project\ncd my_project\n</code></pre> <p>This creates a structured Python project with <code>pyproject.toml</code>.</p> <p>Adding Poetry to an existing project:</p> <pre><code>poetry init\n</code></pre> <p>Follow the interactive prompts to define project dependencies.</p> <p>Creating &amp; Using a Virtual Environment:</p> <p>Poetry automatically creates and manages a virtual environment when installing dependencies. To explicitly create a virtual environment:</p> <pre><code>poetry env use python3\n</code></pre> <p>Activate the virtual environment:</p> <pre><code>poetry shell\n</code></pre> <p>Check the environment:</p> <pre><code>poetry env info\n</code></pre> <p>If you have an existing pyproject.toml, install all dependencies with:</p> <pre><code>poetry install\n</code></pre> <p>Install HESTIA:</p> <p>Inside your project directory, run:</p> <pre><code>poetry add hestia-logger\n</code></pre>"},{"location":"installation/#pip","title":"\ud83d\udce6 pip","text":"<p>HESTIA Asynchronous Logger is published as a python package and can be installed with <code>pip</code>, ideally by using a [virtual environment]. Open up a terminal and install with:</p> Latest1.x <pre><code>pip install hestia-logger\n</code></pre> <pre><code>pip install hestia-logger==\"1.*\" # (1)!\n</code></pre> <ol> <li> <p>HESTIA uses [semantic versioning].</p> <p>This will make sure that you don't accidentally [upgrade to the next major version], which may include breaking changes that silently corrupt your site. Additionally, you can use <code>pip freeze</code> to create a lockfile, so builds are reproducible at all times:</p> <pre><code>pip freeze &gt; requirements.txt\n</code></pre> <p>Now, the lockfile can be used for installation:</p> <pre><code>pip install -r requirements.txt\n</code></pre> </li> </ol> <p>This will automatically install compatible versions of all dependencies. HESTIA always strives to support the latest versions, so there's no need to install those packages separately.</p>"},{"location":"installation/#github","title":"\ud83d\udc19 GitHub","text":"<p>HESTIA can be directly used from [GitHub] by cloning the repository into a subfolder of your project root which might be useful if you want to use the very latest version:</p> <pre><code>git clone https://github.com/fox-techniques/hestia-logger.git\ncd hestia-logger\npip install -e .\n</code></pre> <p>\ud83e\udd29 CONGRAGULATIONS! Continue to the usage. Let's keep going...\ud83d\ude80</p>"},{"location":"prerequisites/","title":"\u26a1\ufe0f Prerequisites","text":"<p>Before installing HESTIA, ensure you have the following dependencies installed:</p> <ul> <li>Python 3.10+</li> <li>Poetry or pip</li> <li>Git</li> <li>Docker &amp; Docker Compose</li> <li>Elasticsearch (Optional, for centralized logging)</li> <li>Kibana (Optional, for log visualization)</li> <li>Grafana (Optional, for advanced monitoring)</li> </ul>"},{"location":"prerequisites/#python-310","title":"\ud83d\udc0d Python 3.10+","text":"<p>Ensure you have Python 3.10+ installed. If not, download and install it from the official Python website. Check your version:</p> <p><pre><code>python --version\n</code></pre> For installation guides and troubleshooting, refer to the RealPython documentation.</p>"},{"location":"prerequisites/#package-managers","title":"\ud83d\udce6 Package managers","text":"Poetrypip <p>Why We Recommend Poetry Over pip</p> <p>While pip is the standard Python package manager, we strongly recommend using Poetry for managing dependencies.</p> <ul> <li>Simplified Dependency Management \u2013 Poetry resolves, installs, and locks dependencies automatically, preventing version conflicts.</li> <li>Built-in Virtual Environments \u2013 Unlike pip, Poetry creates and manages isolated environments for your projects.</li> <li>Reproducible Installs \u2013 Poetry uses pyproject.toml and poetry.lock to ensure consistency across different environments.</li> <li>Better Publishing Workflow \u2013 If you plan to contribute or package Hestia extensions, Poetry makes publishing to PyPI seamless.</li> </ul> <p>For long-term projects and production environments, Poetry provides a more robust and scalable solution than pip.</p> <p>Install Poetry as package manager and dependencies management:</p> <pre><code>curl -sSL https://install.python-poetry.org | python3 -\n</code></pre> <p>Check if Poetry is installed correctly:</p> <pre><code>poetry --version\n</code></pre> <p>Knowledge</p> <p>If you don't have prior experience with Python, we recommend reading Using Python's pip to Manage Your Projects' Dependencies, which is a really good introduction on the mechanics of Python package management and helps you troubleshoot if you run into errors.</p> <p>Upgrade pip to the latest version: </p> <pre><code>python -m pip install --upgrade pip\n</code></pre>"},{"location":"prerequisites/#git","title":"\ud83c\udf31 Git","text":"<p>Ensure you have Git installed. If not, download and install it from the official Git website. Check your version:</p> <pre><code>git --version\n</code></pre>"},{"location":"prerequisites/#docker-docker-compose","title":"\ud83d\udc33 Docker &amp; Docker Compose","text":"<p>To demonstrate HESTIA Asynchronous Logger using Docker, ensure you have Docker and Docker Compose installed. Download and install Docker from the official website:</p> <ul> <li>Docker Engine</li> <li>Docker Compose</li> <li>Docker Desktop</li> </ul> <p>Verify installation with: </p> <pre><code>docker version\n</code></pre> <pre><code>docker compose version\n</code></pre>"},{"location":"prerequisites/#why-docker","title":"Why Docker?","text":"<ul> <li>Runs Hestia services in isolated containers</li> <li>Makes it easier to deploy logging services like Elasticsearch, Kibana, and Grafana</li> </ul> <p>Now that prerequisites are set, continue with configuration. \ud83c\udfaf</p>"},{"location":"techstack/","title":"\ud83d\udcbb Tech Stack","text":"<p>When designing a logging and monitoring stack, we needed a robust, scalable, and efficient system that can process, store, visualize, and analyze logs effectively. Below is the reasoning behind our choices:</p>"},{"location":"techstack/#fluent-bit","title":"\ud83d\udee2\ufe0f Fluent Bit","text":"<p>\ud83d\udd38 Purpose: The Lightweight Log Forwarder</p> <ul> <li>Lightweight and Fast: Minimal resource usage, perfect for Docker containers.</li> <li>Efficient Log Forwarding: Collects JSON logs from HESTIA Logger (e.g., via <code>log-generator</code>) and forwards them to Elasticsearch.</li> <li>Built-in Processing: Parses structured logs with filtering and transformation capabilities.</li> <li>Seamless Elasticsearch Integration: Native output plugin ensures smooth ingestion.</li> </ul> <p>Alternatives Considered:</p> <ul> <li>Logstash: Powerful for complex transformations but resource-heavy.</li> <li>Filebeat: Great for log shipping but lacks parsing flexibility.</li> </ul> <p>\ud83c\udfc5 Why Fluent Bit Won?</p> <ul> <li>Low memory footprint for containerized environments.</li> <li>Native JSON parsing aligns with HESTIA\u2019s log format.</li> <li>Balanced performance and functionality for our needs.</li> <li>Direct Elasticsearch support simplifies the pipeline.</li> </ul>"},{"location":"techstack/#elasticsearch","title":"\ud83d\udd0d Elasticsearch","text":"<p>\ud83d\udd38 Purpose: The Log Storage &amp; Search Engine</p> <ul> <li>Distributed Architecture: Runs as a two-node cluster (<code>es01</code>, <code>es02</code>) for redundancy and scale.</li> <li>Full-Text Search: Enables quick log retrieval with powerful queries.</li> <li>Real-Time Indexing: Logs are searchable almost instantly after ingestion.</li> <li>Scalable Storage: Handles growing log volumes effortlessly.</li> </ul> <p>Alternatives Considered:</p> <ul> <li>MongoDB: General-purpose database, not optimized for log search.</li> <li>Loki: Lightweight and cost-effective but weaker full-text search.</li> </ul> <p>\ud83c\udfc5 Why Elasticsearch Won?</p> <ul> <li>Built for log storage and querying at scale.</li> <li>Near real-time search enhances observability.</li> <li>Pairs seamlessly with Fluent Bit and Kibana.</li> </ul>"},{"location":"techstack/#kibana","title":"\ud83d\udcca Kibana","text":"<p>\ud83d\udd38 Purpose: The Log Visualization Tool</p> <ul> <li>Powerful UI: Search and explore HESTIA logs in Elasticsearch via <code>port 5601</code>.</li> <li>Discover &amp; Dashboards: Simplifies log analysis with filters and visualizations.</li> <li>Real-Time Monitoring: Tracks log trends as they happen.</li> </ul> <p>Alternatives Considered:</p> <ul> <li>Grafana: Strong dashboards but weaker log search.</li> <li>Graylog: Feature-rich but overkill for our setup.</li> </ul> <p>\ud83c\udfc5 Why Kibana Won?</p> <ul> <li>Ideal for interactive log exploration.</li> <li>Native Elasticsearch integration via Docker Compose.</li> <li>Quick dashboards for HESTIA log trends.**</li> </ul>"},{"location":"techstack/#grafana","title":"\ud83c\udfa8 Grafana","text":"<p>\ud83d\udd38 Purpose: Advanced Monitoring &amp; Dashboards</p> <ul> <li>Custom Dashboards: Visualizes HESTIA logs (e.g., \u201cHESTIA Logging Overview\u201d) via <code>port 3000</code>.</li> <li>Multiple Data Sources: Integrates Elasticsearch with potential for metrics (e.g., Prometheus).</li> <li>Rich Visualizations: Time-series, heatmaps, and alerts for log insights.</li> <li>Advanced Alerting: Proactive monitoring of log patterns.</li> </ul> <p>Alternatives Considered:</p> <ul> <li>Kibana Alone: Limited dashboard flexibility.</li> <li>Loki with Grafana: Simpler but misses full-text search.</li> </ul> <p>\ud83c\udfc5 Why Grafana Won?</p> <ul> <li>Flexible dashboards for log analytics.</li> <li>Future-proof with multi-source support.</li> <li>Enhanced alerting beyond Kibana\u2019s capabilities.**</li> </ul>"},{"location":"techstack/#summary","title":"Summary","text":"<p>\u2714 Fluent Bit: Collects and forwards HESTIA logs. \u2714 Elasticsearch: Stores and indexes logs in a cluster. \u2714 Kibana: Enables log search and basic visualization. \u2714 Grafana: Provides advanced monitoring dashboards.  </p> <p>\ud83c\udfaf Together, these tools power HESTIA Logger\u2019s observability pipeline.</p>"},{"location":"user_guide/","title":"\ud83d\udcc4 User Guide","text":"<p>This guide provides simple examples to demonstrate how to use HESTIA Logger:</p>"},{"location":"user_guide/#python-during-development","title":"Python during development","text":"Script ExampleDecorator ExampleMetadata Example <p>Use it in your script:</p> script_example.py<pre><code>from hestia_logger import get_logger\n\n# Get a logger instance\nlogger = get_logger(\"development\")\n\n# Log messages with different levels\nlogger.debug(\"This is a DEBUG log\")\nlogger.info(\"Application started successfully\")\nlogger.warning(\"Low disk space warning\")\nlogger.error(\"Failed to connect to database\")\nlogger.critical(\"System is down!\")\n</code></pre> <p>Run the Script</p> <pre><code>poetry run python example.py\n</code></pre> <p>\ud83d\udccc Expected output in <code>logs/app.log</code>:</p> <p><pre><code>{\"timestamp\": \"2025-03-14T13:57:41.Z\", \"level\": \"INFO\", \"service\": \"development\", \"environment\": \"local\", \"hostname\": \"ubuntu\", \"app_version\": \"1.0.0\", \"message\": \"Application started successfully\"}\n{\"timestamp\": \"2025-03-14T13:57:41.Z\", \"level\": \"WARNING\", \"service\": \"development\", \"environment\": \"local\", \"hostname\": \"ubuntu\", \"app_version\": \"1.0.0\", \"message\": \"Low disk space warning\"}\n{\"timestamp\": \"2025-03-14T13:57:41.Z\", \"level\": \"ERROR\", \"service\": \"development\", \"environment\": \"local\", \"hostname\": \"ubuntu\", \"app_version\": \"1.0.0\", \"message\": \"Failed to connect to database\"}\n{\"timestamp\": \"2025-03-14T13:57:41.Z\", \"level\": \"CRITICAL\", \"service\": \"development\", \"environment\": \"local\", \"hostname\": \"ubuntu\", \"app_version\": \"1.0.0\", \"message\": \"System is down!\"}\n</code></pre> \ud83d\udccc Expected output in <code>logs/development.log</code>: <pre><code>2025-03-14 13:57:41,052 - development - INFO - Application started successfully\n2025-03-14 13:57:41,052 - development - WARNING - Low disk space warning\n2025-03-14 13:57:41,053 - development - ERROR - Failed to connect to database\n2025-03-14 13:57:41,053 - development - CRITICAL - System is down!\n</code></pre></p> <p>HESTIA Logger provides a decorator to automatically log function execution.</p> example_decorator.py<pre><code>from hestia_logger import get_logger\nfrom hestia_logger.decorators import log_execution\n\n# Initialize the logger\nlogger = get_logger(\"decorator\")\n\n@log_execution\ndef add_numbers(a, b):\n     \"\"\"Adds two numbers and returns the result.\"\"\"\n     return a + b\n\n@log_execution\ndef simulate_task():\n     \"\"\"Simulates a task that takes time.\"\"\"\n     import time\n     time.sleep(2)\n     return \"Task completed!\"\n\n# Call the functions\nif __name__ == \"__main__\":\n     result = add_numbers(5, 10)\n     logger.info(f\"Result: {result}\")\n\n     task_status = simulate_task()\n     logger.info(f\"Task Status: {task_status}\")\n</code></pre> <p>\ud83d\udccc Expected log output:</p> <pre><code>{\"timestamp\": \"2025-03-14T12:35:00.123Z\", \"level\": \"INFO\", \"service\": \"decorator\", \"message\": \"\ud83d\udccc Started: add_numbers()\"}\n{\"timestamp\": \"2025-03-14T12:35:00.125Z\", \"level\": \"INFO\", \"service\": \"decorator\", \"message\": \"\u2705 Finished: add_numbers() in 0.0004 sec\"}\n</code></pre> <p>HESTIA supports custom metadata to extend the default content of the logger instance:</p> example_metadata.py<pre><code>from hestia_logger import get_logger\n\nlogger = get_logger(\"my_application\", metadata={\"user_id\": \"12345\", \n                                                \"request_id\": \"abcd-xyz\"})\n\nlogger.info(\"User login successful\")\n</code></pre> <p>\ud83d\udccc Expected output in <code>logs/app.log</code>:</p> <pre><code>{\n     \"timestamp\": \"2025-03-14T14:04:30.Z\", \n     \"level\": \"INFO\", \n     \"service\": \"my_application\", \n     \"environment\": \"local\", \n     \"hostname\": \"ubuntu\", \n     \"app_version\": \"1.0.0\", \n     \"user_id\": \"12345\", \n     \"request_id\": \"abcd-xyz\", \n     \"message\": \"User login successful\"\n}\n</code></pre> <p>\ud83d\udccc Expected output in <code>logs/my_application.log</code>:</p> <pre><code>2025-03-14 14:04:30,840 - my_application - INFO - User login successful\n</code></pre>"},{"location":"user_guide/#running-inside-a-container","title":"Running inside a container","text":"<p>Step 1. Create a simple script that logs messages inside a container.</p> app.py<pre><code>from hestia_logger import get_logger\nimport time\n\n# Get logger instance\nlogger = get_logger(\"container_test\")\n\nlogger.info(\"\ud83d\ude80 Starting Hestia Logger inside Docker...\")\n\nfor i in range(5):\n    logger.debug(f\"Iteration {i+1}: Debugging log message\")\n    logger.info(f\"Iteration {i+1}: Info log message\")\n    time.sleep(1)  # Simulate work\n\nlogger.warning(\"\u26a0\ufe0f This is a warning log inside Docker.\")\nlogger.error(\"\u274c This is an error log inside Docker.\")\nlogger.critical(\"\ud83d\udd25 Critical system failure inside Docker!\")\n\nlogger.info(\"\u2705 Hestia Logger test completed inside Docker.\")\n</code></pre> <p>Step 2. Create a Dockerfile:</p> Dockerfile<pre><code># Use official Python image\nFROM python:3.10\n\n# Set working directory\nWORKDIR /app\n\n# Copy project files\nCOPY . .\n\n# Install Poetry\nRUN pip install poetry\n\n# Install dependencies\nRUN poetry install \n\n# Set environment variables\nENV ENVIRONMENT=\"container\"\nENV LOGS_DIR=\"/var/logs\"\nENV LOG_LEVEL=\"INFO\"\nENV ENABLE_INTERNAL_LOGGER=\"true\"\n\n# Create logs directory with proper permissions\nRUN mkdir -p /var/logs &amp;&amp; chmod -R 777 /var/logs\n\n# Define entrypoint\nCMD [\"poetry\", \"run\", \"python\", \"app.py\"]\n</code></pre> <p>Step 3. Build and run the  Docker Container</p> <p>Build the container:</p> <pre><code>docker build -t hestia-test .\n</code></pre> <p>Run the container:</p> <pre><code>docker run --rm -v $(pwd)/logs:/var/logs hestia-test\n</code></pre> <p>The <code>-v $(pwd)/logs:/var/logs</code> mounts the logs folder from the container to your local machine. This ensures logs persist outside the container.</p>"}]}